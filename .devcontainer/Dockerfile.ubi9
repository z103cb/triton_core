FROM --platform=linux/amd64 nvidia/cuda:12.2.2-devel-ubi9
RUN yum -y config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/cuda-rhel9.repo
RUN rpm -ivh 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm'
RUN yum -y update
RUN yum -y install git git-lfs
RUN yum -y install shadow-utils 
#The Ubuntu image is using python3.10
#RUN yum -y remove  python3 python3-setuptools
RUN yum -y install python3.11 python3.11-devel python3.11-setuptools python3.11-pip
RUN yum -y install wget 
RUN yum -y install --allowerasing curl libcurl-devel libcurl
RUN yum -y install autoconf 
RUN yum -y install automake 
#RUN yum -y install llvm-toolset 
RUN yum -y install gdb 
RUN yum -y install patch 
RUN yum -y install kernel-headers
RUN yum -y install zlib-devel zlib
RUN yum -y install gperftools-devel
RUN yum -y install gnupg
#RUN yum -y install libcurl-devel libcurl
RUN yum -y install openssl-devel openssl
RUN yum -y install libuuid-devel libuuid
RUN yum -y install pulseaudio-libs
RUN yum -y install libtool
RUN yum -y install libb64-devel
RUN yum -y install patchelf
RUN yum -y install rapidjson-devel
RUN yum -y install unzip 
RUN yum -y install libarchive
RUN yum -y install libxml2-devel libxml2
RUN yum -y install re2-devel
RUN yum -y install bash
RUN yum -y install libevent-devel libevent
RUN yum -y install datacenter-gpu-manager
RUN yum -y install libssh2 libpsl
RUN yum -y install oniguruma
RUN yum -y install pkgconf-pkg-config
#RUN yum -y install tree 
RUN yum -y clean all
RUN wget -O /tmp/boost.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.tar.gz && \
    (cd /tmp && tar xzf boost.tar.gz) &&\
    cd /tmp/boost_1_80_0 && ./bootstrap.sh --prefix=/usr && ./b2 install &&  mv /tmp/boost_1_80_0/boost /usr/include/boost
RUN rm -rf /tmp/boost.tar.gz /tmp/boost_1_80_0
RUN wget -P /tmp  https://github.com/Kitware/CMake/releases/download/v3.27.9/cmake-3.27.9-linux-x86_64.sh
RUN chmod 750 /tmp/cmake-3.27.9-linux-x86_64.sh 
RUN /tmp/cmake-3.27.9-linux-x86_64.sh --prefix=/usr --skip-license && rm -rf /tmp/cmake-3.27.9-linux-x86_64.sh
RUN wget -P /tmp https://github.com/numactl/numactl/releases/download/v2.0.16/numactl-2.0.16.tar.gz
RUN cd /tmp && tar -xzf numactl-2.0.16.tar.gz
RUN cd /tmp/numactl-2.0.16 && ./configure && make install 
RUN pip3.11 install --no-cache-dir --upgrade pip wheel
RUN pip3.11 install scons requests
RUN rm /usr/bin/python3 && ln -s /usr/bin/python3.11 /usr/bin/python3 && ln -s /usr/bin/python3.11 /usr/bin/python
RUN rm /usr/bin/pydoc3 && ln -s /usr/bin/pydoc3.11 /usr/bin/pydoc3
RUN mkdir -p /workspace 
#RUN groupadd triton-dev --gid 1001
#RUN adduser --uid 1001 --gid 1001 --groups triton-dev\
#    --create-home --home-dir /workspace --shell /bin/bash \
#    --comment "Triton developer user" triton-dev
#COPY . /workspace
#RUN chown -R triton-dev:triton-dev /workspace

#USER triton-devl

#ENTRYPOINT [ "/workspace/build.py", "-v", "--enable-all", "--no-container-build",  "--build-dir",  "/workspace/build", "--repo-tag=common:r23.10", "--repo-tag=core:r23.10", "--repo-tag=backend:r23.10", "--repo-tag=thirdparty:r23.10", "-j 1" ]
